#!/usr/bin/env python3

"""
Script to list, create workspaces using Terraform Cloud API through Intersight Reverse Proxy APIs
"""
import json
import requests

from intersight_auth import IntersightAuth


def get_workspace(tfcloud_org):
    """
    Function to list workspaces under an Organization
    """
    AUTH = IntersightAuth(
        secret_key_filename="./SecretKey.txt",
        api_key_id="<add_api_key_id>",
    )
    headers = {"Content-Type": "application/json"}
    url = f"https://intersight.com/tfc/api/v2/organizations/{tfcloud_org}/workspaces"
    response = requests.get(
        url,
        headers=headers,
        auth=AUTH,
    )
    print(response.json)


def create_workspace(tfcloud_org, payload):
    """
    Function to create a workspace under the provided organization
    """
    AUTH = IntersightAuth(
        secret_key_filename="./SecretKey.txt",
        api_key_id="<add_api_key_id>",
    )
    headers = {"Content-Type": "application/json"}
    url = f"https://intersight.com/tfc/api/v2/organizations/{tfcloud_org}/workspaces"
    response = requests.post(
        url,
        headers=headers,
        data=json.dumps(payload),
        auth=AUTH,
    )
    print(response.json)


def main():
    tfcloud_org = "<add_tfcloud_org_name>"

    # List workspaces
    get_workspace(tfcloud_org)

    # Payload to create a Base workspace
    payload_base = {
        "data": {
            "attributes": {
                "name": "tf_cross_launch_demo",
                "resource-count": 1,
                "terraform_version": "",
                "working-directory": "",
            },
            "type": "workspaces",
        }
    }

    # Payload to create a workspace with vcs repo, exection mode, auto-apply, tf version settings
    payload_vcs = {
        "data": {
            "attributes": {
                "name": "tf_cross_launch_demo",
                "resource-count": 1,
                "terraform_version": "1.1.1",
                "working-directory": "",
                "execution-mode": "remote",
                "auto-apply": False,
                "vcs-repo": {
                    "identifier": "sandkum5/IST-DEMO",
                    "oauth-token-id": "<enter-git-token>",
                    "branch": "",
                },
            },
            "type": "workspaces",
        }
    }
    create_workspace(tfcloud_org, payload_vcs)


if __name__ == "__main__":
    main()
