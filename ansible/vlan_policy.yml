---
#
# Create a VLAN Policy, Multicast Policy, Add VLANs from a CSV file exported from UCSM
#
- hosts: localhost
  connection: local
  collections:
    - cisco.intersight
  gather_facts: false
  vars:
    api_info: &api_info
      api_private_key: "{{ api_private_key | default(omit) }}"
      api_key_id: "{{ api_key_id | default(omit) }}"
      api_uri: "{{ api_uri | default(omit) }}"
      validate_certs: "{{ validate_certs | default(omit) }}"
    org_name: "default"
  tasks:
    # Get Org Info
    - name: "Get Organization Info"
      intersight_rest_api:
        <<: *api_info
        resource_path: /organization/Organizations
        query_params:
          $filter: "Name eq 'default'"
        return_list: true
      register: org_info
    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: org_info.api_response[0].Moid

    # Create VLAN Policy
    - name: "Create VLAN Policy"
      intersight_rest_api:
        <<: *api_info
        resource_path: /fabric/EthNetworkPolicies
        update_method: "post"
        api_body: {
          "Organization": {
              "ObjectType": "organization.Organization",
              "Moid": "{{ org_info.api_response[0].Moid }}"
          },
          "Name": "ansible_demo",
          "Description": "Policy Created using Ansible",
          "Tags": []
        }
      register: vlan_policy
    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: vlan_policy.api_response.Moid

    # Create Multicast Policy
    - name: Create Multicast Policy
      cisco.intersight.intersight_rest_api:
        <<: *api_info
        resource_path: "/fabric/MulticastPolicies"
        api_body: {
          "Organization": {
              "ObjectType": "organization.Organization",
              "Moid": "{{ org_info.api_response[0].Moid }}"
          },
          "Name": "ansible_multicast",
          "QuerierState": "Disabled",
          "SnoopingState": "Enabled",
          "SrcIpProxy": "Enabled",
          "Tags": []
        }
      register: multicast_policy
    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: multicast_policy.api_response.Moid

    # Parse CSV
    - name: Load CSV Data
      read_csv:
        path: 'demo.csv'
        fieldnames: Name,ID,Type,Transport,Native,VLANSharing,PrimaryVLANName,MulticastPolicyName
        delimiter: ','
      register: csv_output
      delegate_to: localhost

    - name: Parse jinja2 file
      vars:
        AutoAllowOnUplinks: "false"
        IsNative: "false"
        multicast_policy_moid: "{{ multicast_policy.api_response.Moid }}"
        vlan_policy_moid: "{{ vlan_policy.api_response.Moid }}"
        PrimaryVlanId: 0
        vlans: "{{ csv_output.list[1:] }}"
      ansible.builtin.template:
        src: ./vlan_data.j2
        dest: ./data.yml

    - name: Read YAML File
      shell: cat vlan_data.yml
      register: result

    - name: Convert YAML to JSON
      set_fact:
        jsondata: "{{ result.stdout | from_yaml | to_json }}"

    - name: Print data
      debug:
        msg: "{{ jsondata }}"

    # Add VLANs
    - name: "Add VLANs using Loop"
      intersight_rest_api:
        <<: *api_info
        resource_path: "/bulk/Requests"
        api_body: {
          "Verb": "POST",
          "Uri": "/v1/fabric/Vlans",
          "Requests": "{{ item }}"
        }
      register: bulk_vlan_info
      loop: "{{ jsondata | from_json | batch(100) }}"

    - name: Print return information from the previous task
      ansible.builtin.debug:
        var: bulk_vlan_info.api_response
